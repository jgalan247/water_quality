#include <WiFi.h>
#include <PubSubClient.h>

const int phPin=34;
const int turbidityPin=35;
float *ph;
float *turbidity;
float Value=0;
 
// WiFi
//const char *ssid = "HUAWEI-1852"; // Enter your WiFi name
//const char *password = "8JT36YGHN50";  // Enter WiFi password
// WiFi
const char *ssid = "JGALAN"; // Enter your WiFi name
const char *password = "L0r3nz0$!!";  // Enter WiFi password

// MQTT Broker
const char *mqtt_broker = "broker.emqx.io";
const char *topic1 = "vic/water/turbidity";
const char *topic2 = "vic/water/ph";
const char *mqtt_username = "emqx";
const char *mqtt_password = "public";
const int mqtt_port = 1883;
//

WiFiClient espClient;
PubSubClient client(espClient);
 
void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);
  pinMode(phPin,INPUT);
  pinMode(turbidityPin,INPUT);
  delay(1000);
 
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi..");
  }
  // Print local IP address and start web server
  Serial.println("");
  Serial.println("WiFi connected.");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
  
  //connecting to a mqtt broker
  client.setServer(mqtt_broker, mqtt_port);
  client.setCallback(callback);
  while (!client.connected()) {
      String client_id = "esp32-client-";
      client_id += String(WiFi.macAddress());
      Serial.printf("The client %s connects to the public mqtt broker\n", client_id.c_str());
      if (client.connect(client_id.c_str(), mqtt_username, mqtt_password)) {
          Serial.println("Public project weather broker connected");
      } else {
          Serial.print("failed with state ");
          Serial.print(client.state());
          delay(2000);
      }
  }
  
}

void callback(char *topic, byte *payload, unsigned int length) {
  Serial.print("Message arrived in topic: ");
  Serial.println(topic);
  Serial.print("Message:");
  for (int i = 0; i < length; i++) {
      Serial.print((char) payload[i]);
  }
  Serial.println();
  Serial.println("-----------------------");
}

void loop() {

float turbidity = getTurbidity();
float ph = getPh();
char phChar[8];
char turbidityChar[8];
dtostrf(ph, 1, 2, turbidityChar);
dtostrf(ph, 1, 2, phChar);
client.publish(topic1, turbidityChar);
client.publish(topic2, phChar);
delay(5000);
client.loop();

}

float getPh(){
  Value= analogRead(phPin);
  Serial.print(Value);
  Serial.print(" | ");
  float voltage = Value*(3.3/4095.0);
  float ph = (3.3*voltage);
  return ph;
}

float getTurbidity(){
  Value = analogRead(turbidityPin);
  float voltage = Value * (5.0 / 1024.0);
  Serial.print(Value);
  return voltage;
}
